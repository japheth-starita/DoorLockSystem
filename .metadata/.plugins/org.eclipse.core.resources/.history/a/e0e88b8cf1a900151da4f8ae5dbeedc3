package com.example.doorlocksystem;

import java.util.Set;

import android.app.Activity;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothDevice;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View.OnClickListener;
import android.webkit.WebView.FindListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class ChangeUserPassActivity extends Activity {
	TextView lblpass;
	TextView lbluser;
	EditText txtuser;
	EditText txtpass;
	Button cancel;
	private BluetoothAdapter mBluetoothAdapter;
	private BluetoothDevice btModule;
	private ConnectToDevice mConnectThread;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_login);
		
		lblpass = (TextView) findViewById(R.id.Password);
		lbluser = (TextView) findViewById(R.id.Username);
		txtuser = (EditText) findViewById(R.id.user);
		txtpass = (EditText) findViewById(R.id.pw);
		Button cancel = new Button(this);
		cancel.setText("Cancel");
		
		 cancel.setOnClickListener(new OnClickListener() {
             public void onClick(View v) {
                 // Perform action on click
             }
         });
		lblpass.setText("*New " + lblpass.getText().toString());
		lbluser.setText("*New " + lbluser.getText().toString());
	}
	
	public void submitAdmin(){
		String user = txtuser.getText().toString();
		String pass = txtpass.getText().toString();
		if(user.isEmpty() || pass.isEmpty()){
			
		}
	}
	public void sendNewUserPass(String userpass){
		mBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
		BluetoothService bs = new BluetoothService();
		if(bs.isthereBluetooth(mBluetoothAdapter)){
			Set<BluetoothDevice> pairedDevices = mBluetoothAdapter.getBondedDevices();
			if (pairedDevices.size() > 0) {
				for (BluetoothDevice device : pairedDevices) {
					 if(device.getName().equals("HC-05")) 
		                {
		                    btModule = device;
		                    break;
		                }
				}
			}

			//Parameters are btModule - device to be connected
			//mBluetoothAdapter - BluetoothAdapter
			mConnectThread = new ConnectToDevice(btModule, 
					mBluetoothAdapter, mHandler);
			//Connect to Bluetooth Module
			mConnectThread.start();
		}
		else{
			Toast.makeText(getApplicationContext(), ErrorCode.E70, Toast.LENGTH_LONG).show();
		}
	}
  
  public Handler mHandler = new Handler() {
	  public void handleMessage(Message msg) {
		  String data = (String) msg.obj;
		  if(data.equals("OK")){
			  mConnectThread.sendData(SignalToArduino.SEND_NEW_USERNAME_PASSWORD + "");
		  }
		  else{
				  closeAll();
				  data+=mBluetoothAdapter.getAddress();
				  Log.d("Addresses", data);
				  mConnectThread.sendData(SignalToArduino.SEND_DEVICE_TO_ADD+data);
				  closeAll();
			  }
		  }
	    
  };
  
  public void closeAll(){
	  try{
		  mBluetoothAdapter.disable();
		}catch(Exception e){}		
  }
	
	

	
}
